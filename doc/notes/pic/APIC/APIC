/* From the apic data sheet: */

The I/O Advanced Programmable Interrupt Controller (IOAPIC) can be used in 
either a uniprocessor or multi-processor system. The IOAPIC provides 
multi-processor interrupt management and incorporates both static and 
dynamic symmetric interrupt distribution across all processors. In systems with
multiple I/O subsystems, each subsystem can have its own set of interrupts.

Interrupts can be controlled by the standard ISA Compatible interrupt controller
and IOAPIC are used. The selection of which controller responds to an interrupt
is determined by how the interrupt controllers are programmed. Note that it is
the programmer's responsibility to make sure that the same interrupt input 
signal is not handled by both interrupt controllers.

At the system level, APIC consists of two parts, one residing in the I/O 
subsystem (called the IOAPIC) and the other in the CPU (called the local APIC).
The local APIC and the IOAPIC communicate over a dedicated APIC bus. The IOAPIC
bus interface consists of two bi-directional data signals and a clock interrupt.

/* skipping on over to the intel manual */

The Advanced Programmable Interrupt Controller (APIC), referred to in the 
following sections as the local APIC, performs two primary functions for the 
processor:
 * It recives interrupts from the processor's interrupt pins, from internal 
 sources and from an external I/O APIC (or other external interrupt controller).
 It sends these to the processor core for handling.
 * In multiple processor (MP) systems, it sends and receives interprocessor 
 interrupt (IPI) messages to and from other logical processors on the system 
 bus. IPI messages can be used to distribute interrupts among the processors in
 the system or to execute system wide functions (such as, booting up processors
 or distrubuting work among a group of processors).

The external I/OAPIC is part of Intel's system chip set. Its primary function 
is to recieve external interrupt events from the system and its associated I/O 
devices and relay them to the local APIC as interrupt messages. In MP systems,
The I/O APIC also provides a mechanism for distributing external interrupts to
the local APICs of selected processors or groups of processors on the system 
bus.

When a local APIC as sent an interrupt to its processor core for handling, the
processor uses the interrupt and exception handling mechanism.

Each local APIC consists of a set of APIC registers and associated hardware 
that control the delivery of interrupts to the processor core and the generation
of IPI messages. The APIC registers are memory mapped and can be read and 
written to using the MOV instruction.

Local APICS can recieve interrupts from the following sources:
 * Locally connected I/O devices
    These interrupts originate as an edge or level asserted by an I/O device 
    that is connected directly to the processor's local interrupt pins. The I/O
    devices may also be connected to an 8259-type interrupt controller that is
    in turn connected to the processor through one of the local interrupt pins.
 * Externally connected I/O devices
    These interrupts originate as an edge or level asserted by an I/O device 
    that is connected to the interrupt input pins of an I/O APIC. Interrupts are
    sent as I/O interrupt messages from the I/O APIC to one or more of the 
    processors in the system.
 * Inter-processor Interrupts (IPIs)
    An Intel 64 or IA-32 processor can use the IPI mechanism to interrupt 
    another processor or group of processors on the system bus. IPIs are used
    for software self-interrupts, interrupts forwarding, or preemptive 
    scheduling.
 * APIC timer generated interrupts
    The local APIC timer can be programmed to send a local interrupt to its 
    associated processor when a programmed count is reached.
 * Performance monitoring counter interrupts
    P6 family, Pentium 4, and Intel Xeon processors provide the ability to send
    an interrupt to its associated processor when a performance-monitoring 
    counter overflows.
 * Thermal Sensor Interrupts
    Pentium 4 and Intel Xeon processors provide the ability to send an interrupt
    to themselves when the internal thermal sensor has been tripped.
 * APIC Internal error interrupts
    When an error condition is recognized within the local APIC (such as an 
    attempt to access an unimplemented register), the APIC can be programmed
    to send an interrupt to is associated processor.
